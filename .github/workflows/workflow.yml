name: Terraform CI/CD
on: push

jobs:
  terraform-plan:
    runs-on: self-hosted
    container:
      image: hashicorp/terraform:1.9.5
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      NGINX_PROXY_MANAGER_HOST: ${{ secrets.NGINX_PROXY_MANAGER_HOST }}
      NGINX_PROXY_MANAGER_USERNAME: ${{ secrets.NGINX_PROXY_MANAGER_USERNAME }}
      NGINX_PROXY_MANAGER_PASSWORD: ${{ secrets.NGINX_PROXY_MANAGER_PASSWORD }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Terraform Init
        run: terraform -chdir=cloudflare init 
      - name: Terraform Plan        
        run: terraform -chdir=cloudflare plan -out=tfplan -input=false
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: cloudflare/tfplan    
  terraform-apply:
    needs: terraform-plan
    runs-on: self-hosted
    container:
      image: hashicorp/terraform:1.9.5
    environment: production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      NGINX_PROXY_MANAGER_HOST: ${{ secrets.NGINX_PROXY_MANAGER_HOST }}
      NGINX_PROXY_MANAGER_USERNAME: ${{ secrets.NGINX_PROXY_MANAGER_USERNAME }}
      NGINX_PROXY_MANAGER_PASSWORD: ${{ secrets.NGINX_PROXY_MANAGER_PASSWORD }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: cloudflare
      - name: Terraform Init
        run: terraform -chdir=cloudflare init     
      - name: Terraform Apply
        run: terraform -chdir=cloudflare apply -input=false tfplan
